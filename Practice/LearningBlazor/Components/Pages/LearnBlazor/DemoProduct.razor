@page "/learnBlazor/demoproduct"

<div class="p-2 mt-2">
    <div class="row">
        <h3 class="text-primary">Demo - Product</h3>
        <hr>
        @foreach (var item in Products)
        {
            <div class="col-5 border bg-light m-1">

                <span>
                    <h4>Product - @item.Id</h4><br />
                    Name : @item.Name<br />
                    <span><input type="checkbox" @bind="item.IsActive" /> Show Properties </span><br />
                    @if (item.IsActive)
                    {
                        foreach (var props in item.ProductProperties)
                        {
                            <span><br />@props.Key - @props.Value </span>
                        }
                        <br /> <br />
                    }
                </span>
                <input type="button" class="btn btn-danger" @onclick="()=>DeleteProduct(item)" value="Delete">
            </div>
        }

    </div>
    <div>
        <br/>
        Counter++ button clicked <strong> @counter </strong> number of times;<br />
        <input type="button" class="btn btn-success" @onclick="() => IncrementCount(5)" value="Counter + 5">
    </div>
</div>
@code {
    // private Product_Prop selectedProp = new();
    private string selectedPropString = "";
    private int counter=0;
    Product product = new()
        {
            Id = 1,
            Name = "Product1",
            IsActive = false,
            Price = 9,
            ProductProperties = new List<Models.Product_Prop>()
        {
            new Product_Prop{ Id=1, Key="Color",Value="Red"},
            new Product_Prop{ Id=2, Key="Size",Value="20oz"},
            new Product_Prop{ Id=3, Key="Flavor",Value="Rose"}
        }
        };

    List<Product> Products = new();

    protected override void OnInitialized()
    {
        Products.Add(new()
            {
                Id = 1,
                Name = "Midnight Blaze",
                IsActive = false,
                Price = 10,
                ProductProperties = new List<Models.Product_Prop>()
                {
                    new Product_Prop { Id = 1, Key = "Flavor", Value = "Rose"},
                    new Product_Prop { Id = 2, Key = "Size", Value = "20oz"},
                    new Product_Prop { Id = 3, Key = "Color", Value="Purple" }
                }
            });

        Products.Add(new()
            {
                Id = 2,
                Name = "Blossom Lily",
                IsActive = true,
                Price = 11,
                ProductProperties = new List<Models.Product_Prop>()
            {
                new Product_Prop { Id = 1, Key = "Flavor", Value = "Lily" },
                new Product_Prop { Id = 2, Key = "Size", Value = "18oz" },
                new Product_Prop {Id = 3,Key = "Color",Value = "White"}
            }
            });

        Products.Add(new()
            {
                Id = 3,
                Name = "Early Sunrise",
                IsActive = true,
                Price = 11,
                ProductProperties = new List<Models.Product_Prop>()
            {
                new Product_Prop { Id = 1, Key = "Flavor", Value = "Sunrise" },
                new Product_Prop { Id = 2, Key = "Size", Value = "22oz" },
                new Product_Prop {Id = 3,Key = "Color",Value = "Sunlight Yellow"}
            }
            });
    }

    private void DeleteProduct(Product deleteProduct)
    {
        foreach (var item in Products)
        {
            if (item.Id== deleteProduct.Id)
            {
                Products.Remove(item);
                break;
            }
        }
    }

    private void IncrementCount(int incrementor)
    {
        counter += incrementor;    
    }
}