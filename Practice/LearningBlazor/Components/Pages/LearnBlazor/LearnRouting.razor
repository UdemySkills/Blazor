@page "/learnrouting"
@page "/learnRouting/{Param1}"
@page "/learnRouting/{Param1}/{Param2}"
@page "/learnBlazor/learnRouting"
@page "/learnRouting/catch-all/{*PageParameters}"
@inject NavigationManager _NavigationManager

<h3>LearnRouting</h3>
@if(!string.IsNullOrEmpty(@Param1))
{
    <p>You passed  "@Param1" as the first parameter </P>
}
@if(!string.IsNullOrEmpty(@Param2))
{
    <p>You passed  "@Param2" as the first parameter </P>
}
<p>Page Parameters : @PageParameters</p>

@* <a href="learnrouting?param1=Learn&Param2=Blazor" class="btn btn-primary">Navigate to query Parameters</a> *@
<button @onclick="NavigateToQueryParam" class="btn btn-primary">Navigate to query parameter</button>
<button class="btn btn-success" @onclick="LoadParameters">Load Parameters</button>
<br />



<div class="bg-success" style="height:2000px"></div>
<h2 id="targetElement">Navigating to the target element using NavLink </h2>

@code {
    [Parameter]
    public string Param1 { get; set; }

    [Parameter]
    public string Param2 { get; set; } = "";

    [Parameter]
    public string PageParameters { get; set; } = "";

    private void LoadParameters()
    {
        var uri = new Uri(_NavigationManager.Uri);
        var query = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query);
        Param1 = query["Param1"];
        Param2 = query["Param2"];

    }

    private void NavigateToQueryParam()
    {
        // perform any required operation before routing the user to the provided navigation link.
        _NavigationManager.NavigateTo("learnrouting?param1=Learn&Param2=Blazor");
    }
}
